"""
Django settings for index project.

Generated by 'django-admin startproject' using Django 2.1.13.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'FDGLJKGGUIFSUOIFavghjkzxlhjkcKHJQUIY@#OUIGCF%*&*)@(&*JHSGDHL:hguyfdakju!tfgdhjksgfhjksghdjfkjsdhfhsdfkjghcsazhnjvkgjeasdo2ryuif'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

     # Third-Party
    'crispy_forms',
    'smart_cache_control',
    'widget_tweaks',
    'maintenance_mode',

    # Own
    'users.apps.UsersConfig',
    'blog.apps.BlogConfig',
    'forms.apps.FormsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'smart_cache_control.middleware.SmartCacheControlMiddleware',
    'maintenance_mode.middleware.MaintenanceModeMiddleware'
]

#MIDDLEWARE_CLASSES += [
#    'django.contrib.auth.middleware.AuthenticationMiddleware',
#    'smart_cache_control.middleware.SmartCacheControlMiddleware'
#]

ROOT_URLCONF = 'index.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'media'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'maintenance_mode.context_processors.maintenance_mode'
            ],
        },
    },
]

WSGI_APPLICATION = 'index.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': 'painless_mobile-desktopdb',
#        'USER': 'painless_mobile-desktopdb',
#        'PASSWORD': '_(wXWA@2pzIz',
#        'HOST': 'localhost',
#        'PORT': '3306',
#    }
#}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'user_pictures')
MEDIA_URL = '/user_pictures/'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_REDIRECT_URL = 'blog-home'
LOGIN_URL = 'login'

# Google Recaptcha

RECAPTCHA_SITE_KEY = "6LfCbOkUAAAAABdOaaPpp-nOwajwCqP5Yvy3cui1"
RECAPTCHA_SECRET_KEY = "6LfCbOkUAAAAACmf6F9HmbjYbDTu6tIDJS6O4x_k"



# Web Mail Credentials Settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-relay.sendinblue.com'
EMAIL_PORT = 587  # 587 when u not have installed tls
EMAIL_HOST_USER = 'aineas.vasiliou@gmail.com'
EMAIL_HOST_PASSWORD = 'D7kIsf3nWzYpFOAB'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'no-reply <noreply@painlesspvp.ml>'





#Sentry.io
sentry_sdk.init(
    dsn="https://f9665ad42f244c0ab754c2ab63652916@o377866.ingest.sentry.io/5200543",
    integrations=[DjangoIntegration()],

    # If you wish to associate users to errors (assuming you are using
    # django.contrib.auth) you may enable sending PII data.
    send_default_pii=True
)


CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_SSL_REDIRECT = True
SECURE_HSTS_SECONDS = 86400 # 1 Day
SECURE_HSTS_INCLUDE_SUBDOMAINS = False #false always
SECURE_HSTS_PRELOAD = True


# Maintenance mode settings

# if True the maintenance-mode will be activated
MAINTENANCE_MODE = False
# if True admin site will not be affected by the maintenance-mode page
MAINTENANCE_MODE_IGNORE_ADMIN_SITE = True
# if True the staff will not see the maintenance-mode page
MAINTENANCE_MODE_IGNORE_STAFF = True
# if True the superuser will not see the maintenance-mode page
MAINTENANCE_MODE_IGNORE_SUPERUSER = True
# the template that will be shown by the maintenance-mode page
MAINTENANCE_MODE_TEMPLATE = '503.html'

